[{"/Users/luhan/Udemy/library-app/frontend/react-library/src/index.tsx":"1","/Users/luhan/Udemy/library-app/frontend/react-library/src/App.tsx":"2","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/NavbarAndFooter/Footer.tsx":"3","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/HomePage.tsx":"4","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/NavbarAndFooter/Navbar.tsx":"5","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/Carousel.tsx":"6","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/Heros.tsx":"7","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/LibraryServices.tsx":"8","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/ExploreTopBooks.tsx":"9","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/ReturnBook.tsx":"10","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/Utils/SpinnerLoading.tsx":"11","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/SearchBooksPage/SearchBooksPage.tsx":"12","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/SearchBooksPage/components/SearchBook.tsx":"13","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/Utils/Pagination.tsx":"14"},{"size":321,"mtime":1691745443993,"results":"15","hashOfConfig":"16"},{"size":1347,"mtime":1691753571670,"results":"17","hashOfConfig":"16"},{"size":933,"mtime":1691749083893,"results":"18","hashOfConfig":"16"},{"size":405,"mtime":1690383109654,"results":"19","hashOfConfig":"16"},{"size":1761,"mtime":1691753894989,"results":"20","hashOfConfig":"16"},{"size":5348,"mtime":1691748967552,"results":"21","hashOfConfig":"16"},{"size":3772,"mtime":1690381247306,"results":"22","hashOfConfig":"16"},{"size":970,"mtime":1690382035224,"results":"23","hashOfConfig":"16"},{"size":633,"mtime":1691748874965,"results":"24","hashOfConfig":"16"},{"size":1021,"mtime":1690821658077,"results":"25","hashOfConfig":"16"},{"size":376,"mtime":1690822250758,"results":"26","hashOfConfig":"16"},{"size":10127,"mtime":1691689071639,"results":"27","hashOfConfig":"16"},{"size":2618,"mtime":1690885572626,"results":"28","hashOfConfig":"16"},{"size":3097,"mtime":1690903020360,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q4wncx",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/luhan/Udemy/library-app/frontend/react-library/src/index.tsx",[],[],"/Users/luhan/Udemy/library-app/frontend/react-library/src/App.tsx",[],[],"/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/NavbarAndFooter/Footer.tsx",[],[],"/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/HomePage.tsx",[],[],[],"/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/NavbarAndFooter/Navbar.tsx",["78"],[],"/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/Carousel.tsx",[],[],"/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/Heros.tsx",["79","80"],[],"export const Heros = () => {\n    return (\n        <div>\n            <div className='d-none d-lg-block'>\n                <div className='row g-0 mt-5'>\n                    <div className='col-sm-6 col-md-6'>\n                        <div className='col-image-left'></div>\n                    </div>\n                    <div className='col-4 col-md-4 container d-flex justify-content-center align-items-center'>\n                        <div className='ml-2'>\n                            <h1>What have you been reading?</h1>\n                            <p className='lead'>\n                                The library team would love to know what you have been reading.\n                                Whether it is to learn a new skill or grow within one,\n                                we will be able to provide the top content for you!\n                            </p>\n                            <a className='btn main-color btn-lg text-white' href='#'>Sign up</a>\n                        </div>\n                    </div>\n                </div>\n                <div className='row g-0'>\n                    <div className='col-4 col-md-4 container d-flex \n                        justify-content-center align-items-center'>\n                        <div className='ml-2'>\n                            <h1>Our collection is always changing!</h1>\n                            <p className='lead'>\n                                Try to check in daily as our collection is always changing!\n                                We work nonstop to provide the most accurate book selection possible\n                                for our Luv 2 Read students! We are diligent about our book selection\n                                and our books are always going to be our\n                                top priority.\n                            </p>\n                        </div>\n                    </div>\n                    <div className='col-sm-6 col-md-6'>\n                        <div className='col-image-right'></div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Mobile Heros */}\n            <div className='d-lg-none'>\n                <div className='container'>\n                    <div className='m-2'>\n                        <div className='col-image-left'></div>\n                        <div className='mt-2'>\n                            <h1>What have you been reading?</h1>\n                            <p className='lead'>\n                                The library team would love to know what you have been reading.\n                                Whether it is to learn a new skill or grow within one,\n                                we will be able to provide the top content for you!\n                            </p>\n                            <a className='btn main-color btn-lg text-white' href='#'>Sign up</a>\n                        </div>\n                    </div>\n                    <div className='m-2'>\n                        <div className='col-image-right'></div>\n                        <div className='mt-2'>\n                            <h1>Our collection is always changing!</h1>\n                            <p className='lead'>\n                                Try to check in daily as our collection is always changing!\n                                We work nonstop to provide the most accurate book selection possible\n                                for our Luv 2 Read students! We are diligent about our book selection\n                                and our books are always going to be our\n                                top priority.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/LibraryServices.tsx",["81"],[],"export const LibraryServices = () => {\n    return (\n        <div className='container my-5'>\n            <div className='row p-4 align-items-center border shadow-lg'>\n                <div className='col-lg-7 p-3'>\n                    <h1 className='display-4 fw-bold'>\n                        Can't find what you are looking for?\n                    </h1>\n                    <p className='lead'>\n                        If you cannot find what you are looking for,\n                        send our library admin's a personal message!\n                    </p>\n                    <div className='d-grid gap-2 justify-content-md-start mb-4 mb-lg-3'>\n                        <a className='btn main-color btn-lg text-white' href='#'>\n                            Sign up\n                        </a>\n                    </div>\n                </div>\n                <div className='col-lg-4 offset-lg-1 shadow-lg lost-image'></div>\n            </div>\n        </div>\n    );\n}","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/ExploreTopBooks.tsx",[],[],"/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/HomePage/components/ReturnBook.tsx",["82"],[],"import React from \"react\";\nimport BookModel from \"../../../models/BookModel\";\n\nexport const ReturnBook: React.FC<{ book: BookModel }> = (props) => {\n    return (\n        <div className='col-xs-6 col-sm-6 col-md-4 col-lg-3 mb-3'>\n            <div className='text-center'>\n                {props.book.img ?\n                    <img\n                        src={props.book.img}\n                        width='151'\n                        height='233'\n                        alt=\"book\"\n                    />\n                    :\n                    <img\n                        src={require('./../../../Images/BooksImages/book-luv2code-1000.png')}\n                        width='151'\n                        height='233'\n                        alt=\"book\"\n                    />\n                }\n\n                <h6 className='mt-2'>{props.book.title}</h6>\n                <p>{props.book.author}</p>\n                <a className='btn main-color text-white' href='#'>Reserve</a>\n            </div>\n        </div>\n    )\n} ","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/Utils/SpinnerLoading.tsx",[],[],"/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/SearchBooksPage/SearchBooksPage.tsx",["83","84","85","86","87","88","89"],[],"import { useEffect, useState } from 'react';\nimport BookModel from '../../models/BookModel';\nimport { SpinnerLoading } from '../Utils/SpinnerLoading';\nimport { SearchBook } from './components/SearchBook';\nimport { Pagination } from '../Utils/Pagination';\n\nexport const SearchBooksPage = () => {\n    // State variables for managing books data, loading status, error, current page, and pagination\n    const [books, setBooks] = useState<BookModel[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [httpError, setHttpError] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [booksPerPage] = useState(5);\n    const [totalAmountOfBooks, setTotalAmountOfBooks] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n    const [search, setSearch] = useState('');\n    const [searchUrl, setSearchUrl] = useState('');\n    const [categorySelection, setCategorySelection] = useState('Book category');\n\n    //useEffect是React里的一个钩子函数，useEffect 接受两个参数：第一个参数是一个函数，是我们要执行的操作；第二个参数是一个数组，用来控制 useEffect 的执行时机，当数组里的内容发生变化时，会再次执行useEffect里的函数。\n    useEffect(() => {\n        // Fetch books data from the API when the component mounts or the current page changes\n        const fetchBooks = async () => {\n            const baseUrl: string = \"http://localhost:8080/api/books\";\n\n            let url: string = '';\n\n            if (searchUrl === '') {\n                url = `${baseUrl}?page=${currentPage - 1}&size=${booksPerPage}`;\n            } else {\n                let searchWithPage = searchUrl.replace('<page>',`${currentPage-1}`);\n                url = baseUrl + searchWithPage;\n            }\n\n            // Fetch data from the API using the constructed URL\n            const response = await fetch(url);\n\n            // Check if the response is not ok (status code other than 200)\n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n\n            // Parse the JSON data from the API response\n            const responseJson = await response.json();\n\n            // Extract the book data from the response JSON\n            const responseData = responseJson._embedded.books;\n\n            // Set the total amount of books and total pages for pagination\n            setTotalAmountOfBooks(responseJson.page.totalElements);\n            setTotalPages(responseJson.page.totalPages);\n\n            // Transform the book data and store it in the state\n            const loadedBooks: BookModel[] = [];\n\n            for (const key in responseData) {\n                loadedBooks.push({\n                    id: responseData[key].id,\n                    title: responseData[key].title,\n                    author: responseData[key].author,\n                    description: responseData[key].description,\n                    copies: responseData[key].copies,\n                    copiesAvailable: responseData[key].copiesAvailable,\n                    category: responseData[key].category,\n                    img: responseData[key].img,\n                });\n            }\n\n            setBooks(loadedBooks);\n            setIsLoading(false);\n        };\n\n        // Call the fetchBooks function to load the data or handle errors\n        fetchBooks().catch((error: any) => {\n            setIsLoading(false);\n            setHttpError(error.message);\n        });\n\n        // Scroll to the top of the page when the component mounts or the current page changes\n        window.scrollTo(0, 0);\n    }, [currentPage, searchUrl]);\n\n    // Display a loading spinner if data is still loading\n    if (isLoading) {\n        return (\n            <SpinnerLoading />\n        );\n    }\n\n    // Display an error message if there's an HTTP error\n    if (httpError) {\n        return (\n            <div className='container m-5'>\n                <p>{httpError}</p>\n            </div>\n        );\n    }\n\n    //handle changes in the search box content\n    const searchHandleChange = () => {\n        setCurrentPage(1);\n        //If the search box content is empty, set setSearchUrl to an empty string to clear the search link\n        if (search === '') {\n            setSearchUrl('');\n        } else {\n            // If the search box has content, construct the search link based on the search box content    \n            setSearchUrl(`/search/findByTitleContaining?title=${search}&page=<page>&size=${booksPerPage}`)\n        }\n        setCategorySelection('Book category')\n    }\n\n    //Function named categoryField: handle changes in the category selection\n    const categoryField = (value: string) => {\n        setCurrentPage(1);\n        if (\n            value.toLowerCase() === 'fe' ||\n            value.toLowerCase() === 'be' ||\n            value.toLowerCase() === 'data' ||\n            value.toLowerCase() === 'devops'\n        ) {\n            setCategorySelection(value);\n            setSearchUrl(`/search/findByCategory?category=${value}&page=<page>&size=${booksPerPage}`)\n        } else {\n            setCategorySelection('All');\n            setSearchUrl(`?page=<page>&size=${booksPerPage}`)\n        }\n    }\n\n\n    // Calculate the indexes of the first and last books to be displayed on the current page\n    const indexOfLastBook: number = currentPage * booksPerPage;\n    const indexOfFirstBook: number = indexOfLastBook - (booksPerPage - 1);\n    let lastItem = booksPerPage * currentPage <= totalAmountOfBooks ?\n        booksPerPage * currentPage : totalAmountOfBooks;\n\n    // Callback function to handle page changes when using pagination\n    const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n    // Render the search books page with search input, dropdown, book list, and pagination\n    return (\n        <div>\n            <div className='container'>\n                <div>\n                    <div className='row mt-5'>\n                        <div className='col-6'>\n                            <div className='d-flex'>\n                                <input className='form-control me-2' type='search'\n                                    placeholder='Search' aria-labelledby='Search'\n                                    // Listen for input changes and update the 'search' state variable \n                                    onChange={e => setSearch(e.target.value)} />\n                                <button className='btn btn-outline-success'\n                                    onClick={() => searchHandleChange()}>\n                                    Search\n                                </button>\n                            </div>\n                        </div>\n                        <div className='col-4'>\n                            <div className='dropdown'>\n                                <button className='btn btn-secondary dropdown-toggle' type='button'\n                                    id='dropdownMenuButton1' data-bs-toggle='dropdown'\n                                    aria-expanded='false'>\n                                    {categorySelection}\n                                </button>\n                                <ul className='dropdown-menu' aria-labelledby='dropdownMenuButton1'>\n                                    <li onClick={() => categoryField('All')}>\n                                        <a className='dropdown-item' href='#'>\n                                            All\n                                        </a>\n                                    </li>\n                                    <li onClick={() => categoryField('FE')}>\n                                        <a className='dropdown-item' href='#'>\n                                            Front End\n                                        </a>\n                                    </li>\n                                    <li onClick={() => categoryField('BE')}>\n                                        <a className='dropdown-item' href='#'>\n                                            Back End\n                                        </a>\n                                    </li>\n                                    <li onClick={() => categoryField('Data')}>\n                                        <a className='dropdown-item' href='#'>\n                                            Data\n                                        </a>\n                                    </li>\n                                    <li onClick={() => categoryField('DevOps')}>\n                                        <a className='dropdown-item' href='#'>\n                                            DevOps\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    {totalAmountOfBooks > 0 ?\n                        <>\n                            <div className='mt-3'>\n                                <h5>Number of results: ({totalAmountOfBooks})</h5>\n                            </div>\n                            <p>\n                                {indexOfFirstBook} to {lastItem} of {totalAmountOfBooks} items:\n                            </p>\n                            {books.map(book => (\n                                <SearchBook book={book} key={book.id} />\n                            ))}\n\n                        </>\n                        :\n                        <div className='m-5'>\n                            <h3>\n                                Can't find what you are looking for?\n                            </h3>\n                            <a type='button' className='btn main-color btn-md px-4 me-md-2 fw-bold text-white'\n                                href='#'>Library Services</a>\n                        </div>\n\n                    }\n                    {totalPages > 1 &&\n                        <Pagination currentPage={currentPage} totalPages={totalPages} paginate={paginate} />\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/SearchBooksPage/components/SearchBook.tsx",["90"],[],"import BookModel from \"../../../models/BookModel\"\n\nexport const SearchBook: React.FC<{ book: BookModel }> = (props) => {\n    return (\n        <div className='card mt-3 shadow p-3 mb-3 bg-body rounded'>\n            <div className='row g-0'>\n                <div className='col-md-2'>\n                    <div className='d-none d-lg-block'> {/* Content to be shown only on large screens */}\n                        {props.book.img ?\n                            <img src={props.book.img}\n                                width='123'\n                                height='196'\n                                alt='Book'\n                            />\n                            :\n                            <img src={require('../../../Images/BooksImages/book-luv2code-1000.png')}\n                                width='123'\n                                height='196'\n                                alt='Book'\n                            />\n                        }\n                    </div>\n                    <div className='d-lg-none d-flex justify-content-center \n                        align-items-center'>    {/* Content to be shown only on screens smaller than large */}\n                        {props.book.img ?\n                            <img src={props.book.img}\n                                width='123'\n                                height='196'\n                                alt='Book'\n                            />\n                            :\n                            <img src={require('../../../Images/BooksImages/book-luv2code-1000.png')}\n                                width='123'\n                                height='196'\n                                alt='Book'\n                            />\n                        }\n                    </div>\n                </div>\n                <div className='col-md-6'>\n                    <div className='card-body'>\n                        <h5 className='card-title'>\n                            {props.book.author}\n                        </h5>\n                        <h4>\n                            {props.book.title}\n                        </h4>\n                        <p className='card-text'>\n                            {props.book.description}\n                        </p>\n                    </div>\n                </div>\n                <div className='col-md-4 d-flex justify-content-center align-items-center'>\n                    <a className='btn btn-md main-color text-white' href='#'>\n                        View Details\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/Utils/Pagination.tsx",[],[],{"ruleId":"91","severity":1,"message":"92","line":30,"column":29,"nodeType":"93","endLine":30,"endColumn":89},{"ruleId":"91","severity":1,"message":"92","line":17,"column":29,"nodeType":"93","endLine":17,"endColumn":86},{"ruleId":"91","severity":1,"message":"92","line":53,"column":29,"nodeType":"93","endLine":53,"endColumn":86},{"ruleId":"91","severity":1,"message":"92","line":14,"column":25,"nodeType":"93","endLine":14,"endColumn":82},{"ruleId":"91","severity":1,"message":"92","line":26,"column":17,"nodeType":"93","endLine":26,"endColumn":67},{"ruleId":"94","severity":1,"message":"95","line":81,"column":8,"nodeType":"96","endLine":81,"endColumn":32,"suggestions":"97"},{"ruleId":"91","severity":1,"message":"92","line":166,"column":41,"nodeType":"93","endLine":166,"endColumn":79},{"ruleId":"91","severity":1,"message":"92","line":171,"column":41,"nodeType":"93","endLine":171,"endColumn":79},{"ruleId":"91","severity":1,"message":"92","line":176,"column":41,"nodeType":"93","endLine":176,"endColumn":79},{"ruleId":"91","severity":1,"message":"92","line":181,"column":41,"nodeType":"93","endLine":181,"endColumn":79},{"ruleId":"91","severity":1,"message":"92","line":186,"column":41,"nodeType":"93","endLine":186,"endColumn":79},{"ruleId":"91","severity":1,"message":"92","line":212,"column":29,"nodeType":"93","endLine":213,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":54,"column":21,"nodeType":"93","endLine":54,"endColumn":78},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'booksPerPage'. Either include it or remove the dependency array.","ArrayExpression",["98"],{"desc":"99","fix":"100"},"Update the dependencies array to be: [booksPerPage, currentPage, searchUrl]",{"range":"101","text":"102"},[3473,3497],"[booksPerPage, currentPage, searchUrl]"]
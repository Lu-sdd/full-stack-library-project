{"ast":null,"code":"var _jsxFileName = \"/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/Utils/Pagination.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pagination = props => {\n  // Array to store the page numbers to be displayed\n  const pageNumbers = [];\n\n  // If the current page is 1\n  if (props.currentPage === 1) {\n    // Add the current page to the pageNumbers array\n    pageNumbers.push(props.currentPage);\n\n    // If there is at least one more page after the current page, add the next page to the array\n    if (props.totalPages >= props.currentPage + 1) {\n      pageNumbers.push(props.currentPage + 1);\n    }\n\n    // If there are at least two more pages after the current page, add the second next page to the array\n    if (props.totalPages >= props.currentPage + 2) {\n      pageNumbers.push(props.currentPage + 2);\n    }\n  }\n\n  // If the current page is greater than 1\n  else if (props.currentPage > 1) {\n    // If the current page is greater than or equal to 3, add the two previous pages to the array\n    if (props.currentPage >= 3) {\n      pageNumbers.push(props.currentPage - 2);\n      pageNumbers.push(props.currentPage - 1);\n    } else {\n      // If the current page is less than 3, add the previous page to the array\n      pageNumbers.push(props.currentPage - 1);\n    }\n\n    // Add the current page to the array\n    pageNumbers.push(props.currentPage);\n\n    // If there is at least one more page after the current page, add the next page to the array\n    if (props.totalPages >= props.currentPage + 1) {\n      pageNumbers.push(props.currentPage + 1);\n    }\n\n    // If there are at least two more pages after the current page, add the second next page to the array\n    if (props.totalPages >= props.currentPage + 2) {\n      pageNumbers.push(props.currentPage + 2);\n    }\n  }\n\n  // Return the Pagination component\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    \"aria-label\": \"...\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        onClick: () => props.paginate(1),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-link\",\n          children: \"First Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => props.paginate(number),\n        className: 'page-item ' + (props.currentPage === number ? 'active' : ''),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-link\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        onClick: () => props.paginate(props.totalPages),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-link\",\n          children: \"Last Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["Pagination","props","pageNumbers","currentPage","push","totalPages","_jsxDEV","children","className","onClick","paginate","fileName","_jsxFileName","lineNumber","columnNumber","map","number","_c","$RefreshReg$"],"sources":["/Users/luhan/Udemy/library-app/frontend/react-library/src/layouts/Utils/Pagination.tsx"],"sourcesContent":["export const Pagination: React.FC<{\n    currentPage: number, \n    totalPages: number, \n    paginate: any // Callback function to handle page changes\n}> = (props) => {\n    // Array to store the page numbers to be displayed\n    const pageNumbers = [];\n\n    // If the current page is 1\n    if (props.currentPage === 1) {\n        // Add the current page to the pageNumbers array\n        pageNumbers.push(props.currentPage);\n\n        // If there is at least one more page after the current page, add the next page to the array\n        if (props.totalPages >= props.currentPage + 1) {\n            pageNumbers.push(props.currentPage + 1);\n        }\n\n        // If there are at least two more pages after the current page, add the second next page to the array\n        if (props.totalPages >= props.currentPage + 2) {\n            pageNumbers.push(props.currentPage + 2);\n        }\n    }\n\n    // If the current page is greater than 1\n    else if (props.currentPage > 1) {\n        // If the current page is greater than or equal to 3, add the two previous pages to the array\n        if (props.currentPage >= 3) {\n            pageNumbers.push(props.currentPage - 2);\n            pageNumbers.push(props.currentPage - 1);\n        } else {\n            // If the current page is less than 3, add the previous page to the array\n            pageNumbers.push(props.currentPage - 1);\n        }\n\n        // Add the current page to the array\n        pageNumbers.push(props.currentPage);\n\n        // If there is at least one more page after the current page, add the next page to the array\n        if (props.totalPages >= props.currentPage + 1) {\n            pageNumbers.push(props.currentPage + 1);\n        }\n\n        // If there are at least two more pages after the current page, add the second next page to the array\n        if (props.totalPages >= props.currentPage + 2) {\n            pageNumbers.push(props.currentPage + 2);\n        }\n    }\n\n    // Return the Pagination component\n    return (\n        <nav aria-label=\"...\">\n            <ul className=\"pagination\">\n                {/* First Page button */}\n                <li className=\"page-item\" onClick={() => props.paginate(1)}>\n                    <button className=\"page-link\">\n                        First Page\n                    </button>\n                </li>\n                {/* Map through pageNumbers array and display page number buttons */}\n                {pageNumbers.map(number => (\n                    <li key={number} onClick={() => props.paginate(number)}\n                        className={'page-item ' + (props.currentPage === number ? 'active' : '')}>\n                        <button className=\"page-link\">\n                            {number}\n                        </button>\n                    </li>\n                ))}\n                {/* Last Page button */}\n                <li className=\"page-item\" onClick={() => props.paginate(props.totalPages)}>\n                    <button className=\"page-link\">\n                        Last Page\n                    </button>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}